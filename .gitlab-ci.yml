image: 'docker:latest'
services:
  - 'docker:dind'
stages:
  - build
  - deploy
variables:
  CI_REGISTRY_IMAGE: $CI_REGISTRY/$CI_PROJECT_NAMESPACE/$CI_PROJECT_NAME
  FRONTEND_IMAGE: $CI_REGISTRY_IMAGE/frontend
  BACKEND_IMAGE: $CI_REGISTRY_IMAGE/backend
  DB_HOST: $CI_COMMIT_REF_NAME
  DB_PORT: $CI_COMMIT_REF_NAME
  DB_USER: $CI_COMMIT_REF_NAME
  DB_PASSWORD: $CI_COMMIT_REF_NAME
  DB_NAME: $CI_COMMIT_REF_NAME
  DB_SSLMODE: $CI_COMMIT_REF_NAME

before_script:
  - docker login -u "$CI_REGISTRY_USER" -p "$CI_REGISTRY_PASSWORD" $CI_REGISTRY

build_frontend:
  stage: build
  script:
    - echo "Building frontend Docker image..."
    - docker build -f frontend/Dockerfile -t $FRONTEND_IMAGE .
    - docker push $FRONTEND_IMAGE
  rules:
    - if: $CI_COMMIT_REF_NAME == "main"

build_backend:
  stage: build
  script:
    - echo "Building backend Docker image..."
    - docker build -f backend/Dockerfile -t $BACKEND_IMAGE .
    - docker push $BACKEND_IMAGE
  rules:
    - if: $CI_COMMIT_REF_NAME == "main"

deploy:
  stage: deploy
  script:
    - echo "Deploying to GitLab Pages..."
    - mkdir -p public
    - cp -r frontend/build/* public/  # Copy the built frontend files to the public directory
    - cp -r backend/bin/* public/api  # Ensure the backend API is under /api
  artifacts:
    paths:
      - public
  rules:
    - if: $CI_COMMIT_REF_NAME == "main"
