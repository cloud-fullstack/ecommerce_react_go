stages:
  - build
  - deploy

# Frontend build job
build_frontend:
  stage: build
  script:
    - echo "Setting PUBLIC_URL..."
    - export PUBLIC_URL="/rezaverse"  # Set PUBLIC_URL for GitLab Pages
    - echo "PUBLIC_URL is set to: $PUBLIC_URL"
    - npm install
    - npm run build
  artifacts:
    paths:
      - build  # Save the build folder as an artifact
  rules:
    - if: $CI_COMMIT_REF_NAME == $CI_DEFAULT_BRANCH

# Backend build job
build_backend:
  stage: build
  script:
    - echo "Building backend..."
    - cd backend
    - ./build.sh  # Replace with your backend build command
  artifacts:
    paths:
      - backend/bin  # Save the backend build output as an artifact
  rules:
    - if: $CI_COMMIT_REF_NAME == $CI_DEFAULT_BRANCH

# Combined deploy job (replaces the old `deploy` job)
pages:
  stage: deploy
  dependencies:
    - build_backend
    - build_frontend  # Ensure this job runs after build_frontend
  script:
    - echo "Deploying to GitLab Pages..."
    - mkdir -p public  # Create the public directory on the host

    # Copy frontend build artifacts to the public directory
    - mv build/* public/

    # Copy backend build artifacts to the public/api directory
    - mkdir -p public/api
    - cp -r backend/bin/* public/api/

    # Optionally, print the directory structure for debugging
    - ls -R public
  artifacts:
    paths:
      - public  # The folder that contains the files to be exposed at the Page URL
  rules:
    - if: $CI_COMMIT_REF_NAME == $CI_DEFAULT_BRANCH