stages:
  - build
  - deploy

variables:
  DOCKER_REGISTRY: registry.gitlab.com
  FRONTEND_IMAGE: $DOCKER_REGISTRY/rezav/rezaverse/frontend

# Build Frontend
build_frontend:
  stage: build
  image: node:18  # Use Node.js image for building React
  script:
    - echo "Building React frontend..."
    - cd frontend
    - npm install
    - npm run build
    - cd ..
  artifacts:
    paths:
      - frontend/build/  # Save the built frontend files
  only:
    - main

# Build and Push Docker Image
build_docker_image:
  stage: build
  image: docker:latest  # Use Docker image for Docker commands
  services:
    - docker:dind  # Enable Docker-in-Docker
  script:
    - echo "Logging in to Docker Registry..."
    - docker login -u gitlab-ci-token -p $CI_JOB_TOKEN $DOCKER_REGISTRY
    - echo "Listing repository contents for debugging..."
    - ls -R  # Debugging step to verify folder structure
    - echo "Building Docker image..."
    - docker build -t $FRONTEND_IMAGE -f frontend/Dockerfile .
    - echo "Pushing Docker image..."
    - docker push $FRONTEND_IMAGE
  only:
    - main

# Deploy to GitLab Pages (Optional)
pages:
  stage: deploy
  image: alpine:latest  # Use a lightweight image for deployment
  script:
    - echo "Deploying frontend to GitLab Pages..."
    - mkdir public
    - cp -r frontend/build/* public/
  artifacts:
    paths:
      - public
  only:
    - main